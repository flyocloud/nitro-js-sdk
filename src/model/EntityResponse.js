/**
 * Flyo Nitro CMS
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0-beta.139
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EntityResponseEntity from './EntityResponseEntity';

/**
 * The EntityResponse model module.
 * @module model/EntityResponse
 * @version 1.0.0-beta.139
 */
class EntityResponse {
    /**
     * Constructs a new <code>EntityResponse</code>.
     * @alias module:model/EntityResponse
     */
    constructor() { 
        
        EntityResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EntityResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EntityResponse} obj Optional instance to populate.
     * @return {module:model/EntityResponse} The populated <code>EntityResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EntityResponse();

            if (data.hasOwnProperty('entity')) {
                obj['entity'] = EntityResponseEntity.constructFromObject(data['entity']);
            }
            if (data.hasOwnProperty('model')) {
                obj['model'] = ApiClient.convertToType(data['model'], Object);
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = ApiClient.convertToType(data['language'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EntityResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EntityResponse</code>.
     */
    static validateJSON(data) {
        // validate the optional field `entity`
        if (data['entity']) { // data not null
          EntityResponseEntity.validateJSON(data['entity']);
        }
        // ensure the json data is a string
        if (data['language'] && !(typeof data['language'] === 'string' || data['language'] instanceof String)) {
            throw new Error("Expected the field `language` to be a primitive type in the JSON string but got " + data['language']);
        }

        return true;
    }


}



/**
 * @member {module:model/EntityResponseEntity} entity
 */
EntityResponse.prototype['entity'] = undefined;

/**
 * @member {Object} model
 */
EntityResponse.prototype['model'] = undefined;

/**
 * Current language context for entity model data
 * @member {String} language
 */
EntityResponse.prototype['language'] = undefined;






export default EntityResponse;

