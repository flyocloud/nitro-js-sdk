/**
 * Flyo Nitro CMS
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0-beta.128
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Content from '../model/Content';

/**
* Content service.
* @module api/ContentApi
* @version 1.0.0-beta.128
*/
export default class ContentApi {

    /**
    * Constructs a new ContentApi. 
    * @alias module:api/ContentApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Put content
     * @param {String} pageId The id of the given page
     * @param {Object} opts Optional parameters
     * @param {module:model/Content} opts.content 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response
     */
    putContentWithHttpInfo(pageId, opts) {
      opts = opts || {};
      let postBody = opts['content'];
      // verify the required parameter 'pageId' is set
      if (pageId === undefined || pageId === null) {
        throw new Error("Missing the required parameter 'pageId' when calling putContent");
      }

      let pathParams = {
        'pageId': pageId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/content/{pageId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Put content
     * @param {String} pageId The id of the given page
     * @param {Object} opts Optional parameters
     * @param {module:model/Content} opts.content 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
    putContent(pageId, opts) {
      return this.putContentWithHttpInfo(pageId, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
